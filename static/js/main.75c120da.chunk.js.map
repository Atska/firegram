{"version":3,"sources":["utils/theme.js","components/DeletePostButton.js","components/styles/PostStyles.js","components/PostCard.js","components/MessageCard.js","routes/Home.js","components/EditAccount.js","components/styles/ProfileStyles.js","components/ProfileCard.js","routes/Profile.js","components/styles/LoginRegistrationStyles.js","components/LoginCard.js","components/RegistrationCard.js","routes/LoginRegistration.js","components/NavBar.js","utils/PrivateRoute.js","App.js","serviceWorker.js","index.js","static/login.png","static/Registration.png"],"names":["theme","createMuiTheme","palette","primary","main","contrastText","secondary","DeletePostButton","props","handleClickOpen","setState","open","handleClose","handleSubmit","event","a","preventDefault","jwtToken","localStorage","token","options","method","headers","Authorization","fetch","postId","response","json","data","console","log","message","status","window","location","reload","state","Tooltip","title","placement","Button","onClick","this","fontSize","Dialog","onClose","DialogTitle","DialogActions","color","Component","styles","root","maxWidth","minWidth","marginBottom","border","header","background","borderBottom","media","height","paddingTop","comment","display","justifyContent","borderTop","PostCard","handleLikeClick","post","likes","length","liked","classes","handle","time","photoURL","comments","dayjs","extend","relativeTime","Card","className","CardHeader","avatar","Avatar","src","Typography","component","Link","to","subheader","fromNow","action","CardMedia","CardContent","variant","CardActions","IconButton","aria-label","TextField","id","label","withStyles","MessageCard","handleChange","target","value","body","JSON","stringify","multiline","rows","textfield","fullWidth","onChange","minHeight","Home","posts","loading","map","key","CircularProgress","MessageBox","Grid","container","spacing","direction","justify","alignItems","item","xs","EditAccount","bio","website","size","startIcon","aria-labelledby","DialogContent","autoFocus","margin","username","textAlign","padding","content","flexDirection","button","edit","ProfileCard","handleUpdatePicture","image","files","FormData","append","handleClick","document","getElementById","click","profile","follows","followedBy","credentials","alt","href","abo","type","style","withRouter","Profile","notifications","Accept","LoginCard","user","email","password","errors","error","setItem","history","push","name","bind","login","autoComplete","onSubmit","textfields","helperText","Box","marginTop","RegistrationCard","newUser","confirmPassword","Registration","LoginRegistration","typography","fontWeight","NavBar","AppBar","position","Toolbar","ThemeProvider","removeItem","PrivateRoute","rest","render","getItem","pathname","App","exact","path","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.75c120da.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#fb8c00\",\r\n      contrastText: \"#000\"\r\n    },\r\n    secondary: {\r\n      main: \"#d50000\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React, { Component, Fragment } from \"react\";\r\n// Material UI\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n// Icons\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nclass DeletePostButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const jwtToken = localStorage.token;\r\n\r\n    let options = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: jwtToken\r\n      }\r\n    };\r\n\r\n    const response = await fetch(`/post/${this.props.postId}`, options);\r\n    const data = await response.json();\r\n    console.log(data.message);\r\n    this.setState({ open: false });\r\n    if (response.status === 200) {\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title=\"Delete Post\" placement=\"bottom\">\r\n          <Button onClick={this.handleClickOpen}>\r\n            {<DeleteIcon fontSize=\"medium\" />}\r\n          </Button>\r\n        </Tooltip>\r\n        <Dialog open={this.state.open} onClose={this.handleClose}>\r\n          <DialogTitle>Are you sure?</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeletePostButton;\r\n","const styles = {\r\n    root: {\r\n      maxWidth: 500,\r\n      minWidth: 500,\r\n      marginBottom: \"5%\",\r\n      border: \"1\"\r\n    },\r\n    header: {\r\n      background: \"#FCFCFC\",\r\n      borderBottom: \" 1px solid #D7D7D7\"\r\n    },\r\n    message: {\r\n      background: \"#FFFFFF\"\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    comment: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      background: \"#FCFCFC\",\r\n      borderTop: \"1px solid #D7D7D7\"\r\n    }\r\n  };\r\n\r\n  export default styles;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport DeletePostButton from \"./DeletePostButton\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n//utils\r\nimport styles from \"./styles/PostStyles\";\r\n// Material UI\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n// Icons\r\nimport CommentTwoToneIcon from \"@material-ui/icons/CommentTwoTone\";\r\nimport FavoriteTwoToneIcon from \"@material-ui/icons/FavoriteTwoTone\";\r\n\r\nclass PostCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      liked: false,\r\n      likes: this.props.post.likes.length\r\n    };\r\n  }\r\n\r\n  handleLikeClick = async () => {\r\n    const jwtToken = localStorage.token;\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: jwtToken\r\n      }\r\n    };\r\n\r\n    // Like and Unlike Feature\r\n    try {\r\n      const response = await fetch(\r\n        `/post/${this.props.post.postId}/like`,\r\n        options\r\n      );\r\n      const data = await response.json();\r\n      if (data.message === \"Successfully unliked.\") {\r\n        this.setState({\r\n          likes: this.props.post.likes.length,\r\n          liked: false\r\n        });\r\n      } else if (data.message === \"Successfully liked.\") {\r\n        this.setState({\r\n          likes: this.props.post.likes.length + 1,\r\n          liked: true\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    //destructering: const classes = this.props.classes\r\n    const {\r\n      classes,\r\n      post: { message, handle, time, photoURL, comments, postId }\r\n    } = this.props;\r\n\r\n    const { likes } = this.state;\r\n\r\n    //format ISO-string time to relative time\r\n    dayjs.extend(relativeTime);\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n        {/* HEADER */}\r\n        <CardHeader\r\n          className={classes.header}\r\n          avatar={<Avatar src={photoURL} />}\r\n          title={\r\n            <Typography color=\"inherit\" component={Link} to={`/user/${handle}`}>\r\n              {handle}\r\n            </Typography>\r\n          }\r\n          subheader={dayjs(time).fromNow()}\r\n          action={<DeletePostButton postId={postId} />}\r\n        />\r\n        {/* PICTURE */}\r\n        <CardMedia></CardMedia>\r\n        {/* MESSAGE */}\r\n        <CardContent className={classes.message}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" >\r\n            {message}\r\n          </Typography>\r\n        </CardContent>\r\n        {/* LIKE ICONS */}\r\n        <CardActions>\r\n          <IconButton aria-label=\"like\">\r\n            <FavoriteTwoToneIcon\r\n              fontSize=\"small\"\r\n              onClick={this.handleLikeClick}\r\n            />\r\n            {likes}\r\n          </IconButton>\r\n          {/* COMMENT ICON */}\r\n          <IconButton>\r\n            <CommentTwoToneIcon fontSize=\"small\" />\r\n            {comments.length}\r\n          </IconButton>\r\n        </CardActions>\r\n        {/* COMMENT */}\r\n        <CardActions className={classes.comment}>\r\n          <TextField id=\"standard-basic\" label=\"Add comment...\" />\r\n          <Button variant=\"outlined\">Post</Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PostCard);\r\n","import React, { Component } from \"react\";\r\n// Material UI\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n// Icons\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\n\r\nconst styles = {\r\n  root: {\r\n    maxWidth: 500,\r\n    minWidth: 500,\r\n    marginBottom: \"5%\",\r\n    border: \"1\",\r\n    minHeight: \"20vh\"\r\n  }\r\n};\r\n\r\nclass MessageCard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ message: event.target.value });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const jwtToken = localStorage.token;\r\n    let data = {\r\n      message: this.state.message\r\n    };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: jwtToken\r\n      },\r\n      body: JSON.stringify(data)\r\n    };\r\n    const response = await fetch(\"/addPost\", options);\r\n    if (response.status === 200) {\r\n      // reloads the window for updating pic || warning antipattern!\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Card className={classes.root}>\r\n        {/* MESSAGE FIELD */}\r\n        <CardContent>\r\n          <TextField\r\n            id=\"message\"\r\n            label=\"Message\"\r\n            multiline\r\n            rows=\"4\"\r\n            value={this.state.message}\r\n            variant=\"outlined\"\r\n            className={classes.textfield}\r\n            fullWidth\r\n            onChange={this.handleChange}\r\n          />\r\n        </CardContent>\r\n        <CardActions>\r\n          {/* ADD BUTTON */}\r\n          <Tooltip title=\"Add Post\" placement=\"bottom\">\r\n            <Button onClick={this.handleSubmit}>\r\n              {<AddCircleIcon color=\"primary\" fontSize=\"medium\" />}\r\n            </Button>\r\n          </Tooltip>\r\n          {/* UPLOAD IMAGE BUTTON */}\r\n          <Tooltip title=\"Upload image\" placement=\"bottom\">\r\n            <Button color=\"primary\" fontSize=\"large\">\r\n              <InsertPhotoIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MessageCard);\r\n","import React, { Component } from \"react\";\r\n//components\r\nimport PostCard from \"../components/PostCard\";\r\nimport MessageCard from \"../components/MessageCard\";\r\n//Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: null,\r\n      loading: true\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    // gets all posts\r\n    try {\r\n      const response = await fetch(\"/posts\");\r\n      const json = await response.json();\r\n      this.setState({ posts: json, loading: false });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // maps over all posts and adds loading circle\r\n    let posts = this.state.posts ? (\r\n      this.state.posts.map(post => {\r\n        return <PostCard post={post} key={post.handle} />;\r\n      })\r\n    ) : (\r\n      <CircularProgress />\r\n    );\r\n\r\n    // Box is only displayed when posts are loaded\r\n    let MessageBox = this.state.posts ? <MessageCard /> : null;\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\">\r\n        {/* MESSAGE */}\r\n        <Grid>{MessageBox}</Grid>\r\n        {/* POST ITEMS*/}\r\n        <Grid item xs={\"auto\"}>\r\n          {posts}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component, Fragment } from \"react\";\r\n// import jwt_decode from \"jwt-decode\";\r\n// Material UI\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// Icons\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\n\r\nclass EditAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bio: this.props.bio,\r\n      website: this.props.website,\r\n      open: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ bio: this.props.bio ? this.props.bio : \"\" });\r\n    this.setState({ website: this.props.website ? this.props.website : \"\" });\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.id]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const jwtToken = localStorage.token;\r\n    let data = {\r\n      bio: this.state.bio,\r\n      website: this.state.website\r\n    };\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: jwtToken\r\n      },\r\n      body: JSON.stringify(data)\r\n    };\r\n    try {\r\n      const response = await fetch(\"/user\", options);\r\n      if (response.status === 200) {\r\n        this.setState(data);\r\n        this.handleClose();\r\n        // reloads the window for updating pic || warning antipattern!\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Tooltip title=\"Edit account details\" placement=\"bottom\">\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            startIcon={<AccountBoxIcon />}\r\n            onClick={this.handleClickOpen}></Button>\r\n        </Tooltip>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\">\r\n          <DialogTitle id=\"form-dialog-title\">Edit Account</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"website\"\r\n              label=\"Website\"\r\n              variant=\"outlined\"\r\n              value={this.state.website}\r\n              fullWidth\r\n              onChange={this.handleChange}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              multiline\r\n              rows=\"3\"\r\n              margin=\"dense\"\r\n              id=\"bio\"\r\n              label=\"Biography\"\r\n              variant=\"outlined\"\r\n              onChange={this.handleChange}\r\n              value={this.state.bio}\r\n              fullWidth\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleSubmit} color=\"primary\">\r\n              Update\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditAccount;\r\n","const styles = {\r\n  root: {\r\n    maxWidth: \"20%\",\r\n    minWidth: \"20%\"\r\n  },\r\n  username: {\r\n    textAlign: \"center\",\r\n    borderTop: \"1px solid #D7D7D7\",\r\n    padding: \"5%\",\r\n    borderBottom: \"1px solid #D7D7D7\"\r\n  },\r\n  content: {\r\n    display: \"flex\"\r\n  },\r\n  media: {\r\n    maxWidth: \"100%\",\r\n    minWidth: \"100%\",\r\n    alignItems: \"center\"\r\n  },\r\n  header: {\r\n    fontSize: 25,\r\n    borderBottom: \"1px solid #D7D7D7\",\r\n    margin: \"normal\"\r\n  },\r\n  website: {\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  button: {\r\n    maxWidth: \"20%\",\r\n    minWidth: \"20%\",\r\n    alignItems: \"center\"\r\n  },\r\n  edit: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    background: \"#FCFCFC\",\r\n    borderTop: \"1px solid #D7D7D7\"\r\n  }\r\n};\r\n\r\nexport default styles;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport EditAccount from \"./EditAccount\";\r\n// Styles\r\nimport styles from \"./styles/ProfileStyles\";\r\n// Material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from '@material-ui/core/Link';\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n// Icon\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\n\r\nclass ProfileCard extends Component {\r\n  handleUpdatePicture = async event => {\r\n    event.preventDefault();\r\n    const image = event.target.files[0];\r\n    let data = new FormData();\r\n    data.append(\"image\", image);\r\n    try {\r\n      const jwtToken = localStorage.token;\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: jwtToken\r\n        },\r\n        body: data\r\n      };\r\n      await fetch(\"/uploadProfilePicture\", options);\r\n      // reloads the window for updating pic || warning antipattern!\r\n      window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    const pictureUpload = document.getElementById(\"profilePicture\");\r\n    pictureUpload.click();\r\n  };\r\n\r\n  render() {\r\n    // <img className={classes.media} src={photoURL} alt=\"new\" />\r\n    // user: {likes, notifications, follows, followedBy,\r\n    // credentials: {handle, email, photoURL, time, userId}}\r\n    const {\r\n      classes,\r\n      profile: {\r\n        follows,\r\n        followedBy,\r\n        credentials: { handle, bio, photoURL, website }\r\n      }\r\n    } = this.props;\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n        <CardContent>\r\n          {/* PROFILE PICTURE */}\r\n          <Grid>\r\n            <CardMedia\r\n              className={classes.media}\r\n              component=\"img\"\r\n              alt=\"Profile Picture\"\r\n              src={photoURL}\r\n              title=\"Profile Picture\"\r\n            />\r\n          </Grid>\r\n          <Grid>\r\n            {/* USERNAME */}\r\n            <Typography\r\n              className={classes.username}\r\n              variant=\"h4\"\r\n              color=\"primary\"\r\n              component=\"h2\">\r\n              {handle}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid>\r\n            <Typography className={classes.website}>\r\n              <Link href={website}>\r\n                {website}\r\n              </Link>\r\n            </Typography>\r\n          </Grid>\r\n          {/* FOLLOWS */}\r\n          <Grid>\r\n            <CardActions>\r\n              <Typography className={classes.abo}>\r\n                {followedBy.length} Follower | {follows.length} follows\r\n              </Typography>\r\n            </CardActions>\r\n          </Grid>\r\n          {/* BIOGRAPHY */}\r\n          <Grid>\r\n            <Typography\r\n              variant=\"body2\"\r\n              color=\"textSecondary\"\r\n              className={classes.bio}>\r\n              {bio}\r\n            </Typography>\r\n          </Grid>\r\n        </CardContent>\r\n        {/* BUTTONS */}\r\n        <CardActions className={classes.edit}>\r\n          {/* IMAGE UPLOAD BUTTON */}\r\n          <Tooltip title=\"Edit profile picture\" placement=\"bottom\">\r\n            <Button\r\n              component=\"label\"\r\n              size=\"small\"\r\n              type=\"file\"\r\n              color=\"primary\"\r\n              startIcon={<ImageIcon />}\r\n              onChange={this.handleUpdatePicture}>\r\n              <input\r\n                type=\"file\"\r\n                id=\"profilePicture\"\r\n                style={{ display: \"none\" }}\r\n                onClick={this.handleClick}\r\n              />\r\n            </Button>\r\n          </Tooltip>\r\n          {/* UPDATE ACCOUNT BUTTON */}\r\n          <EditAccount bio={bio} website={website} />\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(ProfileCard));\r\n","import React, { Component } from \"react\";\r\n// components\r\nimport ProfileCard from \"../components/ProfileCard\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      profile: {\r\n        likes: [],\r\n        notifications: [],\r\n        follows: [],\r\n        followedBy: [],\r\n        credentials: {}\r\n      },\r\n      loading: true\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const jwtToken = localStorage.token;\r\n      const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: jwtToken\r\n        }\r\n      };\r\n      const response = await fetch(\"/user\", options);\r\n      const data = await response.json();\r\n      this.setState({ profile: data, loading: false });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  render() {\r\n    let profile =\r\n      this.state.loading === false ? (\r\n        <ProfileCard profile={this.state.profile} />\r\n      ) : (\r\n        <CircularProgress />\r\n      );\r\n\r\n    return profile;\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","const styles = {\r\n  root: {\r\n    maxWidth: 300,\r\n    minWidth: 300\r\n  },\r\n  content: {\r\n    display: \"flex\"\r\n  },\r\n  media: {\r\n    maxWidth: 80,\r\n    minWidth: 80\r\n  },\r\n  header: {\r\n    fontSize: 25\r\n  },\r\n  textfield: {\r\n    margin: \"normal\"\r\n  },\r\n  button: {\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nexport default styles;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// Styles\r\nimport styles from \"./styles/LoginRegistrationStyles\";\r\n// Images\r\nimport login from \"../static/login.png\";\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass LoginCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: { message: \"\" }\r\n      // redirectToReferrer: false\r\n    };\r\n    this.props = props;\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    let user = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(user)\r\n    };\r\n\r\n    const response = await fetch(\"/signIn\", options);\r\n    if (response.status === 500) {\r\n      const data = await response.json();\r\n      this.setState({ errors: { message: data.error } });\r\n    } else {\r\n      const content = await response.json();\r\n      localStorage.setItem(\"token\", `Bearer ${content.token}`);\r\n      this.props.history.push(\"/home\");\r\n      // this.setState({ redirectToReferrer: true });\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { errors } = this.state;\r\n    // const { from } = this.props.location.state || {\r\n    //   from: { pathname: \"/home\" }\r\n    // };\r\n\r\n    // if (redirectToReferrer === true) {\r\n    //   return <Redirect to={from} />;\r\n    // }\r\n\r\n    return (\r\n      <Card className={classes.root}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"50vh\" }}>\r\n          {/* HEADER */}\r\n          <CardHeader\r\n            title={<Typography className={classes.header}>Login</Typography>}\r\n          />\r\n          {/* PICTURE */}\r\n          <Grid>\r\n            <CardMedia\r\n              className={classes.media}\r\n              component=\"img\"\r\n              alt=\"Login\"\r\n              src={login}\r\n              title=\"Login\"\r\n            />\r\n          </Grid>\r\n          {/* FORM */}\r\n          <CardContent className={classes.content}>\r\n            <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"text\"\r\n                variant=\"filled\"\r\n                size=\"small\"\r\n                className={classes.textfields}\r\n                className={classes.textfields}\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                margin=\"normal\"\r\n                size=\"small\"\r\n                variant=\"filled\"\r\n                helperText={errors.message}\r\n                error={errors.message ? true : false}\r\n                className={classes.textfields}\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              {/* Button */}\r\n              <Grid>\r\n                <Box display=\"flex\" justifyContent=\"center\" marginTop=\"8%\">\r\n                  <Button\r\n                    className=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    justify=\"center\">\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Grid>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(LoginCard));\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// Styles\r\nimport styles from \"./styles/LoginRegistrationStyles\";\r\n// Images\r\nimport Registration from \"../static/Registration.png\";\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nclass RegistrationCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    let newUser = {\r\n      email: this.state.email,\r\n      handle: this.state.username,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    let options = {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(newUser),\r\n    };\r\n\r\n    const response = await fetch(\"/signUp\", options);\r\n    if (response.status === 201) {\r\n      const content = await response.json();\r\n      localStorage.setItem(\"token\", `Bearer ${content.token}`);\r\n      this.props.history.push(\"/home\");\r\n    } else {\r\n      const data = await response.json();\r\n      if (response.status === 500) {\r\n        this.setState({ errors: data.error });\r\n      } else {\r\n        this.setState({ errors: data });\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { errors } = this.state;\r\n    return (\r\n      <Card className={classes.root}>\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: \"50vh\" }}>\r\n          {/* HEADER */}\r\n          <CardHeader\r\n            title={\r\n              <Typography className={classes.header}>Registration</Typography>\r\n            }\r\n          />\r\n          <Grid>\r\n            {/* PICTURE */}\r\n            <CardMedia\r\n              className={classes.media}\r\n              component=\"img\"\r\n              alt=\"Registration\"\r\n              src={Registration}\r\n              title=\"Registration\"\r\n            />\r\n          </Grid>\r\n          {/* FORM */}\r\n          <CardContent className={classes.content}>\r\n            <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                type=\"text\"\r\n                variant=\"filled\"\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                helperText={errors.handle}\r\n                error={errors.handle ? true : false}\r\n                className={classes.textfields}\r\n                value={this.state.username}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                margin=\"normal\"\r\n                size=\"small\"\r\n                variant=\"filled\"\r\n                className={classes.textfields}\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                margin=\"normal\"\r\n                size=\"small\"\r\n                variant=\"filled\"\r\n                helperText={errors.error}\r\n                error={errors.password || errors.error ? true : false}\r\n                className={classes.textfields}\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                margin=\"normal\"\r\n                size=\"small\"\r\n                variant=\"filled\"\r\n                helperText={errors.password || errors.confirmPassword}\r\n                error={errors.password || errors.confirmPassword ? true : false}\r\n                className={classes.textfields}\r\n                value={this.state.confirmPassword}\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n              />\r\n              {/* BUTTON */}\r\n              <Grid>\r\n                <Box display=\"flex\" justifyContent=\"center\" marginTop=\"5%\">\r\n                  <Button\r\n                    className=\"button\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    justify=\"center\">\r\n                    Register\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Grid>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withStyles(styles)(RegistrationCard));\r\n","import React, { Component } from \"react\";\r\n//components\r\nimport LoginCard from \"../components/LoginCard\";\r\nimport RegistrationCard from \"../components/RegistrationCard\";\r\n// Material Ui\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass LoginRegistration extends Component {\r\n  render() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        spacing={7}>\r\n        <Grid item>\r\n          <LoginCard />\r\n        </Grid>\r\n        <Grid item>\r\n          <RegistrationCard />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginRegistration;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\n// Icons\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport WhatshotTwoToneIcon from \"@material-ui/icons/WhatshotTwoTone\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontSize: 18,\r\n    fontWeight: 800\r\n  }\r\n});\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"NavBar-container\">\r\n          {/* LOGO AND TITLE */}\r\n          <Box className=\"NavBar-stylebox\"></Box>\r\n          <ThemeProvider theme={theme}>\r\n            <Button\r\n              startIcon={<WhatshotTwoToneIcon />}\r\n              color=\"inherit\"\r\n              className=\"NavBar-title\"\r\n              component={Link}\r\n              to=\"/home\">\r\n              Firegram\r\n            </Button>\r\n          </ThemeProvider>\r\n          <Box className=\"NavBar-btns\" color=\"inherit\">\r\n            {/* HOME BUTTON */}\r\n            <Tooltip title=\"Home\" placement=\"bottom\">\r\n              <Button\r\n                color=\"inherit\"\r\n                startIcon={<HomeIcon />}\r\n                component={Link}\r\n                to=\"/home\">\r\n                Home\r\n              </Button>\r\n            </Tooltip>\r\n            {/* PROFILE BUTTON*/}\r\n            <Tooltip title=\"Profile\" placement=\"bottom\">\r\n              <Button\r\n                color=\"inherit\"\r\n                startIcon={<AccountBoxIcon />}\r\n                component={Link}\r\n                to=\"/profile\">\r\n                Profile\r\n              </Button>\r\n            </Tooltip>\r\n          </Box>\r\n          {/* LOGOUT */}\r\n          <Button\r\n            color=\"inherit\"\r\n            startIcon={<ExitToAppIcon />}\r\n            className=\"NavBar-logout\"\r\n            component={Link}\r\n            onClick={() => {\r\n              window.localStorage.removeItem(\"token\");\r\n            }}>\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: \"/\" }} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n\r\n// https://stackoverflow.com/questions/43164554/how-to-implement-authenticated-routes-in-react-router-4\r\n","import React, { Component } from \"react\";\r\nimport theme from \"./utils/theme\";\r\n// import jwtDecode from \"jwt-decode\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n//routes\r\nimport Home from \"./routes/Home\";\r\nimport Profile from \"./routes/Profile\";\r\nimport LoginRegistration from \"./routes/LoginRegistration\";\r\n//components\r\nimport NavBar from \"./components/NavBar\";\r\nimport LoginCard from \"./components/LoginCard\";\r\nimport RegistrationCard from \"./components/RegistrationCard\";\r\n//Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport PrivateRoute from \"./utils/PrivateRoute\";\r\n//CSS\r\nimport \"./components/NavBar.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Router>\r\n            <NavBar />\r\n            <Box className=\"container\">\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  render={props => <LoginRegistration {...props} />}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/home\"\r\n                  component={Home}\r\n                />\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/profile\"\r\n                  component={Profile}\r\n                />\r\n                <Route exact path=\"/\" component={LoginCard} />\r\n                <Route\r\n                  exact\r\n                  path=\"/registration\"\r\n                  component={RegistrationCard}\r\n                />\r\n              </Switch>\r\n            </Box>\r\n          </Router>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/login.ca1236d3.png\";","module.exports = __webpack_public_path__ + \"static/media/Registration.5023aeef.png\";"],"sourceRoot":""}